apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "29"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ks-console5","tier":"frontend5","version":"v3.1.15"},"name":"ks-console5","namespace":"kubesphere-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ks-console5","tier":"frontend5","version":"v3.1.15"}},"strategy":{"rollingUpdate":{"maxSurge":0},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"ks-console5","tier":"frontend5","version":"v3.1.15"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/master","operator":"In","values":[""]}]},"weight":100}]}},"containers":[{"image":"kubesphere/ks-console:v3.1.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":8,"initialDelaySeconds":15,"periodSeconds":10,"successThreshold":1,"tcpSocket":{"port":8000},"timeoutSeconds":15},"name":"ks-console","resources":{"limits":{"cpu":1,"memory":"512Mi"},"requests":{"cpu":"20m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/opt/kubesphere/console/server/local_config.yaml","name":"ks-console-config","subPath":"local_config.yaml"},{"mountPath":"/opt/kubesphere/console/server/sample","name":"sample-bookinfo"},{"mountPath":"/etc/localtime","name":"host-time"}]}],"serviceAccount":"kubesphere","serviceAccountName":"kubesphere","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":60},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":60}],"volumes":[{"configMap":{"defaultMode":420,"items":[{"key":"local_config.yaml","path":"local_config.yaml"}],"name":"ks-console-config5"},"name":"ks-console-config"},{"configMap":{"defaultMode":420,"name":"sample-bookinfo"},"name":"sample-bookinfo"},{"hostPath":{"path":"/etc/localtime","type":""},"name":"host-time"}]}}}}
    kubesphere.io/creator: sxxpqp
  creationTimestamp: "2021-09-27T03:35:56Z"
  generation: 32
  labels:
    app: ks-console5
    tier: frontend5
    version: v3.1.15
  name: ks-console5
  namespace: kubesphere-system
  resourceVersion: "48549004"
  uid: 3d486bd8-aafc-4b37-8d0f-35f55de52167
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-console5
      tier: frontend5
      version: v3.1.15
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-console5
        tier: frontend5
        version: v3.1.15
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 100
      containers:
      - image: 192.168.4.31:30002/library/ks-console:3.20
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 8
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8000
          timeoutSeconds: 15
        name: ks-console
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 20m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/kubesphere/console/server/local_config.yaml
          name: ks-console-config
          subPath: local_config.yaml
        - mountPath: /opt/kubesphere/console/server/sample
          name: sample-bookinfo
        - mountPath: /etc/localtime
          name: host-time
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: local_config.yaml
            path: local_config.yaml
          name: ks-console-config5
        name: ks-console-config
      - configMap:
          defaultMode: 420
          name: sample-bookinfo
        name: sample-bookinfo
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time

